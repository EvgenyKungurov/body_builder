require 'active_record'
require 'pg'
require 'logger'
require 'yaml'
require 'fileutils'

task :default => :migrate

namespace :generate do
  desc "migrations"
  task :migration, [:name, :options] do |t, args|
    time = Time.now.strftime "%Y%m%d%H%M%S"
    migration = "db/migrate/#{time}_create_#{args[:name].downcase}.rb"
    controller = "app/controllers/#{args[:name].downcase}_controller.rb"
    model = "app/models/#{args[:name].gsub(/s$/, "")}.rb"

    mvc = Array.new << migration << controller << model
    mvc.each do |mvc|
      puts "File already exist - #{mvc}" if File.exist? mvc
      File.new(mvc, 'w') unless File.exist? mvc
    end
    FileUtils.mkdir_p "app/views/#{args[:name].downcase}"
  end
end

desc "Run migrations"
task :migrate => :connect_db do
  ActiveRecord::Migrator.migrate('db/migrate')
end

desc "Connect to database"
task :connect_db do
  ActiveRecord::Base.establish_connection(YAML.load_file(File.join('db', 'database.yml')))
  ActiveRecord::Base.logger = Logger.new(File.open('db/database.log', 'a'))
end
